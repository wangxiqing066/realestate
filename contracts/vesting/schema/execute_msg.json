{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "fee_config": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "$ref": "#/definitions/FeeConfig"
              }
            },
            "name": {
              "type": [
                "string",
                "null"
              ]
            },
            "owner": {
              "type": [
                "string",
                "null"
              ]
            },
            "vesting": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Vesting"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim"
      ],
      "properties": {
        "claim": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "register_members"
      ],
      "properties": {
        "register_members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegisterMemberItem"
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "ust_withdraw"
      ],
      "properties": {
        "ust_withdraw": {
          "type": "object",
          "required": [
            "amount",
            "recipient"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "recipient": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "token_withdraw"
      ],
      "properties": {
        "token_withdraw": {
          "type": "object",
          "required": [
            "recipient",
            "token"
          ],
          "properties": {
            "recipient": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "FeeConfig": {
      "type": "object",
      "required": [
        "denom",
        "fee",
        "operation"
      ],
      "properties": {
        "denom": {
          "type": "string"
        },
        "fee": {
          "$ref": "#/definitions/Uint128"
        },
        "operation": {
          "type": "string"
        }
      }
    },
    "RegisterMemberItem": {
      "type": "object",
      "required": [
        "address",
        "amount"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "claimed": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Vesting": {
      "type": "object",
      "required": [
        "cliff_end_time",
        "end_time",
        "initial_percentage",
        "start_time"
      ],
      "properties": {
        "cliff_end_time": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "end_time": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "initial_percentage": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "start_time": {
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    }
  }
}
